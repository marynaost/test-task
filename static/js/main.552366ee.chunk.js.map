{"version":3,"sources":["services/api.js","components/filter/Filter.js","components/header/Header.js","components/user-card/UserCardItem.js","components/post/ShowPostItem.js","components/post/ShowPost.js","components/user-card/UserCard.js","hooks/usePagination.js","img/sprite.svg","components/Icon.js","App.js","index.js"],"names":["BASE_URL","fetchData","url","fetch","response","ok","json","Promise","reject","Error","Filter","search","onChange","Input","type","name","placeholder","pattern","title","value","styled","input","Header","changeSort","filter","changeFilter","props","HeaderEl","Text","onClick","div","p","UserCardItem","id","email","phone","website","useState","userPost","setUserPost","showPost","setShowPost","useEffect","userId","then","res","catch","err","console","log","Card","split","Button","li","button","ShowPostItem","post","showText","setShowText","Post","Title","body","ShowPost","data","Wrap","PostsList","map","ul","UserCard","firstContentIndex","lastContentIndex","users","show","setShow","handleChange","UsersWrap","ListUsers","slice","propTypes","PropTypes","number","array","usePagination","contentPerPage","count","page","setPage","pageCount","Math","ceil","changePage","direction","state","nextPage","prevPage","num","Icon","iconName","width","height","fill","stroke","href","sprite","App","setUsers","setFilter","sort","setSort","length","error","usersFiltered","normalizedFilter","toLowerCase","user","includes","filteredUsers","className","e","target","a","b","localeCompare","Navigation","style","marginRight","marginLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.552366ee.chunk.js","sourcesContent":["const BASE_URL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nasync function fetchData(url = '') {\r\n  const response = await fetch(url)\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not Found'))\r\n}\r\n\r\nexport function fetchUserData() {\r\n  return fetchData(BASE_URL)\r\n}\r\n\r\nexport function fetchUserPost(userId) {\r\n  return fetchData(`${BASE_URL}/${userId}/posts`)\r\n}\r\n\r\nconst API = { fetchData }\r\n\r\nexport default API\r\n","import styled from 'styled-components'\r\n\r\nexport default function Filter({ search, onChange }) {\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      placeholder=\"Search\"\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n      value={search}\r\n      onChange={onChange}\r\n    />\r\n  )\r\n}\r\n\r\nconst Input = styled.input`\r\n  width: 248px;\r\n  height: 70px;\r\n  background: #333348;\r\n  border-radius: 40px;\r\n  padding: 20px 35px;\r\n  font-family: inherit;\r\n  color: #eee;\r\n  border: none;\r\n  cursor: pointer;\r\n  &::placeholder {\r\n    color: #eee;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport Filter from 'components/filter/Filter'\r\n\r\nexport default function Header({ changeSort, filter, changeFilter, ...props }) {\r\n  return (\r\n    <HeaderEl {...props}>\r\n      <Text onClick={changeSort}>Sort </Text>\r\n      <Filter search={filter} onChange={changeFilter} />\r\n    </HeaderEl>\r\n  )\r\n}\r\n\r\nconst HeaderEl = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\nconst Text = styled.p`\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport * as API from 'services/api'\r\n\r\nexport default function UserCardItem({\r\n  id,\r\n  name,\r\n  email,\r\n  phone,\r\n  website,\r\n  onChange,\r\n}) {\r\n  const [userPost, setUserPost] = useState([])\r\n  const [showPost, setShowPost] = useState(false)\r\n\r\n  useEffect(() => {\r\n    API.fetchUserPost(id)\r\n      .then(res => {\r\n        setUserPost(res)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [id])\r\n\r\n  const handleClick = () => {\r\n    setShowPost(!showPost)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <p>{name}</p>\r\n        <p>{email}</p>\r\n        <p>{phone.split(' ')[0]}</p>\r\n        <p>{website}</p>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            handleClick()\r\n            onChange(!showPost, userPost)\r\n          }}\r\n        >\r\n          {showPost ? 'Hide posts' : 'Show all posts '}\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Card = styled.li`\r\n  width: 250px;\r\n  height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #333348;\r\n  border-radius: 40px;\r\n  &:not(:nth-last-child(-n + 2)) {\r\n    margin-bottom: 30px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 14px;\r\n    width: 220px;\r\n    height: 220px;\r\n  }\r\n  @media screen and (min-width: 1000px) {\r\n    width: 220px;\r\n    height: 240px;\r\n  }\r\n\r\n  @media screen and (min-width: 1500px) {\r\n    width: 270px;\r\n    height: 220px;\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  background: #52519d;\r\n  border-radius: 40px;\r\n  padding: 16px 38px;\r\n  border: none;\r\n  color: inherit;\r\n  margin: 0 auto;\r\n  margin-top: 30px;\r\n  cursor: pointer;\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    padding: 16px 15px;\r\n  }\r\n`\r\nUserCardItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n}\r\n","import { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function ShowPostItem({ post }) {\r\n  const [showText, setShowText] = useState(false)\r\n  return (\r\n    <>\r\n      <Post>\r\n        <Title onClick={() => setShowText(!showText)}>{post.title}</Title>\r\n        {showText ? <Text key={post.body}>{post.body}</Text> : null}\r\n      </Post>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Post = styled.li`\r\n  position: relative;\r\n  cursor: pointer;\r\n  &:not(:last-child) {\r\n    margin-bottom: 60px;\r\n    &::after {\r\n      position: absolute;\r\n      content: '';\r\n      width: 100%;\r\n      height: 1px;\r\n      background: #4c4c6a;\r\n      margin-top: 30px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Title = styled.p`\r\n  font-weight: 600;\r\n  color: #fff;\r\n  text-align: center;\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    font-size: 18px;\r\n  }\r\n  @media screen and (min-width: 1500px) {\r\n    font-size: 36px;\r\n  }\r\n`\r\n\r\nconst Text = styled.p`\r\n  color: #fff;\r\n  margin-top: 20px;\r\n  @media screen and (min-width: 1000px) {\r\n    font-size: 14px;\r\n  }\r\n  @media screen and (min-width: 1500px) {\r\n    font-size: 18px;\r\n  }\r\n`\r\nShowPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n}\r\n","import styled from 'styled-components'\r\nimport ShowPostItem from './ShowPostItem'\r\n\r\nexport default function ShowPost({ data, ...props }) {\r\n  return (\r\n    <>\r\n      {data && (\r\n        <Wrap>\r\n          <PostsList {...props}>\r\n            {data.map(post => (\r\n              <ShowPostItem key={post.id} post={post} />\r\n            ))}\r\n          </PostsList>\r\n        </Wrap>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nconst Wrap = styled.div`\r\n  background: #333348;\r\n  border-radius: 40px;\r\n  margin-left: auto;\r\n  overflow: hidden;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 300px;\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    width: 430px;\r\n  }\r\n\r\n  @media screen and (min-width: 1500px) {\r\n    width: 870px;\r\n  }\r\n`\r\n\r\nconst PostsList = styled.ul`\r\n  &::-webkit-scrollbar {\r\n    width: 12px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: #52519d;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #12122d;\r\n    border-radius: 20px;\r\n    border: 3px solid #52519d;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    padding: 10px;\r\n    width: 300px;\r\n    height: 500px;\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    width: 430px;\r\n    padding: 30px 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 1500px) {\r\n    padding: 50px 50px;\r\n    width: 870px;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport UserCardItem from './UserCardItem'\r\nimport ShowPost from 'components/post/ShowPost'\r\n\r\nexport default function UserCard({\r\n  firstContentIndex,\r\n  lastContentIndex,\r\n  users,\r\n}) {\r\n  const [show, setShow] = useState(false)\r\n  const [userPost, setUserPost] = useState([])\r\n\r\n  const handleChange = (showPost, userPost) => {\r\n    setShow(showPost)\r\n    setUserPost(userPost)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {users && (\r\n        <UsersWrap>\r\n          <ListUsers>\r\n            {users\r\n              .slice(firstContentIndex, lastContentIndex)\r\n              .map(({ id, name, email, phone, website }) => (\r\n                <UserCardItem\r\n                  key={id}\r\n                  id={id}\r\n                  name={name}\r\n                  email={email}\r\n                  phone={phone}\r\n                  website={website}\r\n                  onChange={handleChange}\r\n                />\r\n              ))}\r\n          </ListUsers>\r\n          {show && <ShowPost data={userPost} />}\r\n        </UsersWrap>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst UsersWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ListUsers = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  width: 300px;\r\n  @media screen and (min-width: 768px) {\r\n    width: 450px;\r\n  }\r\n\r\n  @media screen and (min-width: 1500px) {\r\n    width: 570px;\r\n  }\r\n`\r\nUserCardItem.propTypes = {\r\n  firstContentIndex: PropTypes.number,\r\n  lastContentIndex: PropTypes.number,\r\n  users: PropTypes.array,\r\n}\r\n","import { useState } from 'react'\r\nconst usePagination = ({ contentPerPage, count }) => {\r\n  const [page, setPage] = useState(1)\r\n  // number of pages in total (total items / content on each page)\r\n  const pageCount = Math.ceil(count / contentPerPage)\r\n  // index of last item of current page\r\n  const lastContentIndex = page * contentPerPage\r\n  // index of first item of current page\r\n  const firstContentIndex = lastContentIndex - contentPerPage\r\n  // change page based on direction either front or back\r\n  const changePage = direction => {\r\n    setPage(state => {\r\n      // move forward\r\n      if (direction) {\r\n        // if page is the last page, do nothing\r\n        if (state === pageCount) {\r\n          return state\r\n        }\r\n        return state + 1\r\n        // go back\r\n      } else {\r\n        // if page is the first page, do nothing\r\n        if (state === 1) {\r\n          return state\r\n        }\r\n        return state - 1\r\n      }\r\n    })\r\n  }\r\n  const setPageSAFE = num => {\r\n    // if number is greater than number of pages, set to last page\r\n    if (num > pageCount) {\r\n      setPage(pageCount)\r\n      // if number is less than 1, set page to first page\r\n    } else if (num < 1) {\r\n      setPage(1)\r\n    } else {\r\n      setPage(num)\r\n    }\r\n  }\r\n  return {\r\n    nextPage: () => changePage(true),\r\n    prevPage: () => changePage(false),\r\n    setPage: setPageSAFE,\r\n    firstContentIndex,\r\n    lastContentIndex,\r\n    page,\r\n  }\r\n}\r\nexport default usePagination\r\n","export default __webpack_public_path__ + \"static/media/sprite.5b08b60c.svg\";","import PropTypes from 'prop-types'\r\nimport sprite from 'img/sprite.svg'\r\n\r\nconst Icon = ({ iconName, width, height, fill, stroke, ...props }) => {\r\n  return (\r\n    <svg {...props} width={width} height={height} fill={fill} stroke={stroke}>\r\n      <use href={`${sprite}#${iconName}`}></use>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Icon\r\n\r\nIcon.propTypes = {\r\n  iconName: PropTypes.string.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  fill: PropTypes.string,\r\n  stroke: PropTypes.string,\r\n  props: PropTypes.any,\r\n}\r\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport * as API from 'services/api'\nimport Header from 'components/header/Header'\nimport UserCard from 'components/user-card/UserCard'\nimport usePagination from 'hooks/usePagination'\nimport Icon from 'components/Icon'\nimport 'modern-normalize/modern-normalize.css'\nimport './App.css'\nimport './index.css'\n\nexport default function App() {\n  const [users, setUsers] = useState([])\n  const [filter, setFilter] = useState('')\n  const [sort, setSort] = useState(false)\n\n  const { firstContentIndex, lastContentIndex, nextPage, prevPage, setPage } =\n    usePagination({\n      contentPerPage: 4,\n      count: users.length,\n    })\n\n  useEffect(() => {\n    API.fetchUserData()\n      .then(res => {\n        setUsers(res)\n      })\n      .catch(console.error())\n  }, [])\n\n  const changeFilter = e => {\n    setFilter(e.target.value)\n    setPage(1)\n  }\n\n  const filteredUsers = () => {\n    const normalizedFilter = filter.toLowerCase()\n    return users.filter(user =>\n      user.name.toLowerCase().includes(normalizedFilter),\n    )\n  }\n\n  const changeSort = () => {\n    setSort(!sort)\n\n    if (!sort) {\n      users.sort((a, b) => a.name.localeCompare(b.name))\n      return\n    }\n    users.sort((a, b) => b.name.localeCompare(a.name))\n  }\n  const usersFiltered = filteredUsers()\n\n  return (\n    <Wrap>\n      <Header\n        className=\"header\"\n        changeFilter={changeFilter}\n        filter={filter}\n        changeSort={changeSort}\n      />\n      {usersFiltered.length > 0 ? (\n        <UserCard\n          users={usersFiltered}\n          firstContentIndex={firstContentIndex}\n          lastContentIndex={lastContentIndex}\n        />\n      ) : (\n        <div>Sorry, users not found</div>\n      )}\n\n      <Navigation>\n        <div onClick={prevPage} className=\"page\">\n          <Icon\n            style={{ marginRight: '30px' }}\n            width=\"18px\"\n            height=\"36px\"\n            stroke=\"#eee\"\n            fill=\"transparent\"\n            iconName=\"icon-prev\"\n          />\n          Previous\n        </div>\n\n        <div onClick={nextPage} className=\"page\">\n          Next\n          <Icon\n            style={{ marginLeft: '30px' }}\n            width=\"18px\"\n            height=\"36px\"\n            stroke=\"#eee\"\n            fill=\"transparent\"\n            iconName=\"icon-next\"\n          />\n        </div>\n      </Navigation>\n    </Wrap>\n  )\n}\n\nconst Wrap = styled.div`\n  width: 350px;\n  padding-top: 50px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    width: 1000px;\n  }\n\n  @media screen and (min-width: 1500px) {\n    width: 1470px;\n  }\n\n  .header {\n    margin-bottom: 35px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n`\n\nconst Navigation = styled.div`\n  position: fixed;\n  bottom: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 350px;\n\n  .page {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    width: 1000px;\n  }\n\n  @media screen and (min-width: 1500px) {\n    width: 1470px;\n  }\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}